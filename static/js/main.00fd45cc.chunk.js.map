{"version":3,"sources":["ecs/components/DeActivateCellComponent.ts","ecs/components/PositionComponent.ts","Display/leftClickOnCanvas.ts","ecs/components/ActivateCellComponent.ts","Display/clickOnCanvas.ts","Display/reziseCanvas.ts","ecs/components/CanvasComponent.ts","Display/Canvas.tsx","ecs/components/GridComponent.ts","ecs/components/TimeComponent.ts","ecs/systems/ClearCanvasSystem.ts","ecs/components/CellComponent.ts","ecs/systems/DrawCellsSystem.ts","ecs/systems/GridSystem.ts","ecs/systems/ResolveCellActivationSystem.ts","ecs/systems/ResolveCellDeActivationSystem.ts","ecs/components/SimulationTimeComponent.ts","ecs/systems/SimpleAutomataSystem.ts","utils/Neighbors.ts","ecs/systems/TimerSystem.ts","hooks/useAnimationFrame.tsx","hooks/useRecursiveTimeout.tsx","ecs/components/PauseCommandComponent.ts","ecs/components/PlayCommandComponent.ts","ecs/components/SpeedCommandComponent.ts","ecs/systems/SimulationTimerSystem.ts","ecs/components/ClearGridCommandComponent.ts","ecs/systems/ClearGridSystem.ts","hooks/useEngine.tsx","components/UI/UIBottom.tsx","components/UI/UITop.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DeActivateCellComponent","PositionComponent","constructor","X","Y","leftClickOnCanvas","event","preventDefault","currentTarget","getContext","x","y","rect","getBoundingClientRect","clientX","left","clientY","top","getPositionFromEvent","console","log","entity","EntityManager","instance","createEntity","add","ActivateCellComponent","clickOnCanvas","reziseCanvas","canvas","width","window","innerWidth","height","innerHeight","CanvasComponent","Context","Canvas","canvasRef","useRef","handleContextMenu","useCallback","startPan","useCanvasCamera2D","current","useEffect","addEventListener","removeEventListener","ctx","context","addEntity","addContextEntity","ref","onClick","e","onMouseDown","button","GridComponent","Width","Height","CellSize","Cells","TimeComponent","Value","ClearCanvasSystem","BaseSystem","gridQuery","Query","has","this","entityManager","canvasQuery","onRender","find","get","storedTransform","getTransform","setTransform","CellComponent","DrawCellsSystem","q","grid","cellSize","foreach","position","cell","fillStyle","fillRect","GridSystem","super","cellsQuery","onCreate","Engine","unregisterSystem","gridComponent","strokeStyle","lineWidth","strokeRect","entities","ResolveCellActivationSystem","activateCellsQuery","cellQuery","onUpdate","newCellPositions","canvasComponent","cellX","Math","floor","cellY","push","removeEntity","id","length","positionComponent","some","newActiveCellPosition","ResolveCellDeActivationSystem","deactivateCellsQuery","SimulationTimeComponent","speedMultiplier","neighborsCheck","all","diagonals","adjacent","allWithThis","getAllNeighbors","map","neighbor","SimpleAutomataSystem","lastUpdate","activeCells","time","timeEntity","neighbors","activeCount","gird","forEach","TimerSystem","delta","useAnimationFrame","cb","requestRef","React","previousTimeRef","animate","dt","requestAnimationFrame","cancelAnimationFrame","useRecursiveTimeout","delay","timeout","Date","now","setTimeout","clearTimeout","PauseCommandComponent","PlayCommandComponent","SpeedCommandComponent","SimulationTimerSystem","pausedQ","playQ","speedMultiplierQ","addComponent","timeComponent","paused","play","speed","pauseEntity","playEntity","performance","ClearGridCommandComponent","ClearGridSystem","clearQ","clear","run","tick","render","useEngine","createSystem","systems","system","UIBottom","className","UITop","setSpeedMultiplier","useState","handelSetSpeedMultiplier","currentValue","value","newValue","parseFloat","toFixed","isPaused","setPaused","type","c","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00fd45cc.chunk.js","sourcesContent":["import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class DeActivateCellComponent implements IComponent {}\n\nexport default DeActivateCellComponent;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class PositionComponent implements IComponent {\n  constructor(public X: number, public Y: number) {}\n}\n\nexport default PositionComponent;\n","import React from \"react\";\nimport { EntityManager } from \"@yoieh/ecs-core\";\nimport { DeActivateCellComponent } from \"../ecs/components/DeActivateCellComponent\";\nimport { PositionComponent } from \"../ecs/components/PositionComponent\";\n\nconst getPositionFromEvent = (event: React.MouseEvent<HTMLCanvasElement>) => {\n  const rect = event.currentTarget.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  return { x, y };\n};\n\nexport const leftClickOnCanvas = (\n  event: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\n) => {\n  event.preventDefault();\n  const canvas = event.currentTarget;\n  const context = canvas.getContext(\"2d\");\n\n  if (context) {\n    const { x, y } = getPositionFromEvent(event);\n\n    console.log(`leftClick @ { x: ${x}, y: ${y} }`);\n\n    const entity = EntityManager.instance.createEntity();\n\n    entity.add(new PositionComponent(x, y));\n    entity.add(new DeActivateCellComponent());\n  }\n};\n\nexport default leftClickOnCanvas;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class ActivateCellComponent implements IComponent {}\n\nexport default ActivateCellComponent;\n","import React from \"react\";\nimport { EntityManager } from \"@yoieh/ecs-core\";\nimport { PositionComponent } from \"../ecs/components/PositionComponent\";\nimport { ActivateCellComponent } from \"../ecs/components/ActivateCellComponent\";\n\nconst getPositionFromEvent = (event: React.MouseEvent<HTMLCanvasElement>) => {\n  const rect = event.currentTarget.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  return { x, y };\n};\n\nexport const clickOnCanvas = (\n  event: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\n) => {\n  event.preventDefault();\n  const canvas = event.currentTarget;\n  const context = canvas.getContext(\"2d\");\n\n  if (context) {\n    const { x, y } = getPositionFromEvent(event);\n\n    console.log(`click @ { x: ${x}, y: ${y} }`);\n\n    const entity = EntityManager.instance.createEntity();\n\n    entity.add(new PositionComponent(x, y));\n    entity.add(new ActivateCellComponent());\n  }\n};\n\nexport default clickOnCanvas;\n","export const reziseCanvas = (canvas: HTMLCanvasElement) => {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n};\n\nexport default reziseCanvas;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class CanvasComponent implements IComponent {\n  constructor(public Context: CanvasRenderingContext2D) {}\n}\n\nexport default CanvasComponent;\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { EntityManager } from \"@yoieh/ecs-core\";\nimport { useCanvasCamera2D } from \"@yoieh/use-canvas-camera2d\";\n\nimport { leftClickOnCanvas } from \"./leftClickOnCanvas\";\nimport { clickOnCanvas } from \"./clickOnCanvas\";\nimport { reziseCanvas } from \"./reziseCanvas\";\nimport { CanvasComponent } from \"../ecs/components/CanvasComponent\";\n\ninterface CanvasProps {}\n\nconst addContextEntity = (context: CanvasRenderingContext2D) => {\n  const entity = EntityManager.instance.createEntity();\n\n  entity.add(new CanvasComponent(context));\n\n  EntityManager.instance.addEntity(entity);\n};\n\nexport const Canvas: React.FC<CanvasProps> = function () {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const handleContextMenu = useCallback((event) => {\n    leftClickOnCanvas(event);\n  }, []);\n\n  const {\n    // context,\n    // viewportTopLeft,\n    // scale,\n    // offset,\n    startPan,\n    // reset,\n    // getTransformedPoint,\n  } = useCanvasCamera2D(\n    canvasRef,\n    canvasRef.current?.width,\n    canvasRef.current?.height,\n  );\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas?.addEventListener(\"contextmenu\", handleContextMenu);\n    return () => {\n      canvas?.removeEventListener(\"contextmenu\", handleContextMenu);\n    };\n  }, [canvasRef, handleContextMenu]);\n\n  useEffect(() => {\n    if (canvasRef.current !== null) {\n      reziseCanvas(canvasRef.current);\n    }\n  }, [canvasRef]);\n\n  useEffect(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n\n    if (ctx) {\n      addContextEntity(ctx);\n    }\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      onClick={(e) => clickOnCanvas(e)}\n      onMouseDown={(e) => {\n        // only pan if middle mouse button\n        if (e.button === 1) {\n          startPan(e);\n        }\n      }}\n    />\n  );\n};\n\nexport default Canvas;\n","import { IComponent, IEntity } from \"@yoieh/ecs-core\";\n\nexport class GridComponent implements IComponent {\n  constructor(\n    public Width: number = 0,\n    public Height: number = 0,\n    public CellSize: number = 0,\n\n    public Cells: { [key: string]: IEntity } = {},\n  ) {}\n}\n\nexport default GridComponent;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class TimeComponent implements IComponent {\n  constructor(public Value: number = 0) {}\n}\n\nexport default TimeComponent;\n","import { BaseSystem, Query, IEntity } from \"@yoieh/ecs-core\";\nimport { CanvasComponent } from \"../components/CanvasComponent\";\nimport { GridComponent } from \"../components/GridComponent\";\n\nexport class ClearCanvasSystem extends BaseSystem {\n  private gridQuery: Query = new Query(\n    (entity: IEntity) => entity.has(GridComponent),\n    this.entityManager,\n  );\n\n  private canvasQuery: Query = new Query(\n    (entity: IEntity) => entity.has(CanvasComponent),\n    this.entityManager,\n  );\n\n  public onRender(): void {\n    const canvas = this.canvasQuery.find();\n    const gridQuery = this.gridQuery.find();\n\n    if (!canvas || !gridQuery) {\n      return;\n    }\n\n    const ctx = canvas.get(CanvasComponent).Context;\n    const storedTransform = ctx.getTransform();\n    // eslint-disable-next-line no-self-assign\n    ctx.canvas.width = canvas.get(CanvasComponent).Context.canvas.width;\n    ctx.setTransform(storedTransform);\n  }\n}\n\nexport default ClearCanvasSystem;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class CellComponent implements IComponent {\n  constructor(public Value: number = 0) {}\n}\n\nexport default CellComponent;\n","import { BaseSystem, IEntity, Query } from \"@yoieh/ecs-core\";\nimport { CellComponent } from \"../components/CellComponent\";\nimport { PositionComponent } from \"../components/PositionComponent\";\nimport { CanvasComponent } from \"../components/CanvasComponent\";\nimport { GridComponent } from \"../components/GridComponent\";\n\nexport class DrawCellsSystem extends BaseSystem {\n  public q: Query = new Query(\n    (entity: IEntity) =>\n      entity.has(PositionComponent) && entity.has(CellComponent),\n  );\n\n  private gridQuery: Query = new Query(\n    (entity: IEntity) => entity.has(GridComponent),\n    this.entityManager,\n  );\n\n  private canvasQuery: Query = new Query((entity: IEntity) =>\n    entity.has(CanvasComponent),\n  );\n\n  public onRender(): void {\n    const canvas = this.canvasQuery.find();\n    const grid = this.gridQuery.find();\n\n    if (!canvas || !grid) {\n      return;\n    }\n\n    const cellSize = grid.get(GridComponent).CellSize;\n\n    this.q.foreach((entity: IEntity) => {\n      const position = entity.get(PositionComponent);\n      const cell = entity.get(CellComponent);\n\n      // cellcordinat to pixel cordinat\n      const x = position.X * cellSize;\n      const y = position.Y * cellSize;\n\n      // needs to draw the cell\n      if (cell.Value) {\n        const context = canvas.get(CanvasComponent).Context;\n        context.fillStyle = \"black\";\n        context.fillRect(x, y, cellSize, cellSize);\n      }\n    });\n  }\n}\n\nexport default DrawCellsSystem;\n","import { BaseSystem, Engine, IEntity, Query } from \"@yoieh/ecs-core\";\nimport { CanvasComponent } from \"../components/CanvasComponent\";\nimport { CellComponent } from \"../components/CellComponent\";\nimport { GridComponent } from \"../components/GridComponent\";\n// import { NeighborsComponent } from \"../components/NeighborsComponent\";\n// import { NeighborsComponent } from \"../components/NeighborsComponent\";\nimport { PositionComponent } from \"../components/PositionComponent\";\n\nexport class GridSystem extends BaseSystem {\n  private gridQuery: Query = new Query(\n    (entity: IEntity) => entity.has(GridComponent),\n    this.entityManager,\n  );\n\n  private canvasQuery: Query = new Query(\n    (entity: IEntity) => entity.has(CanvasComponent),\n    this.entityManager,\n  );\n\n  private cellsQuery: Query = new Query(\n    (entity: IEntity) => entity.has(PositionComponent), // && entity.has(NeighborsComponent),\n    this.entityManager,\n  );\n\n  public constructor() {\n    super();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public onCreate(): void {\n    const canvas = this.canvasQuery.find();\n    const grid = this.gridQuery.find();\n\n    if (!canvas || !grid) {\n      Engine.instance.unregisterSystem(this);\n      return;\n    }\n\n    const context = canvas.get(CanvasComponent).Context;\n\n    // draw grid\n    const gridComponent = grid.get(GridComponent);\n\n    context.strokeStyle = \"#c0c0c0\";\n    context.lineWidth = 0.03;\n\n    for (let x = 0; x < gridComponent.Width / gridComponent.CellSize; x += 1) {\n      for (\n        let y = 0;\n        y < gridComponent.Height / gridComponent.CellSize;\n        y += 1\n      ) {\n        const cell = this.entityManager.createEntity();\n\n        // snap to grid\n\n        cell.add(new PositionComponent(x, y));\n        cell.add(new CellComponent());\n\n        gridComponent.Cells[x + y * gridComponent.Width] = cell;\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public onRender(): void {\n    const canvas = this.canvasQuery.find();\n    const grid = this.gridQuery.find();\n\n    if (!canvas || !grid) {\n      return;\n    }\n\n    const context = canvas.get(CanvasComponent).Context;\n\n    // draw grid\n    const gridComponent = grid.get(GridComponent);\n\n    this.cellsQuery.foreach((entity: IEntity) => {\n      const position = entity.get(PositionComponent);\n      // const neighbors = entity.get(NeighborsComponent);\n\n      // needs to draw the cell\n      context.strokeStyle = \"#c0c0c0\";\n      context.lineWidth = 0.03;\n\n      context.strokeRect(\n        position.X * gridComponent.CellSize,\n        position.Y * gridComponent.CellSize,\n        gridComponent.CellSize,\n        gridComponent.CellSize,\n      );\n    }, this.entityManager.entities);\n  }\n}\n\nexport default GridSystem;\n","import { BaseSystem, Query, IEntity } from \"@yoieh/ecs-core\";\nimport { ActivateCellComponent } from \"../components/ActivateCellComponent\";\nimport { CanvasComponent } from \"../components/CanvasComponent\";\nimport { CellComponent } from \"../components/CellComponent\";\nimport { GridComponent } from \"../components/GridComponent\";\nimport { PositionComponent } from \"../components/PositionComponent\";\n\nexport class ResolveCellActivationSystem extends BaseSystem {\n  private gridQuery: Query = new Query(\n    (entity: IEntity) => entity.has(GridComponent),\n    this.entityManager,\n  );\n\n  private canvasQuery: Query = new Query(\n    (entity: IEntity) => entity.has(CanvasComponent),\n    this.entityManager,\n  );\n\n  private activateCellsQuery: Query = new Query(\n    (entity: IEntity) =>\n      entity.has(ActivateCellComponent) && entity.has(PositionComponent),\n    this.entityManager,\n  );\n\n  private cellQuery: Query = new Query(\n    (entity: IEntity) => entity.has(CellComponent),\n    this.entityManager,\n  );\n\n  public onUpdate(): void {\n    const canvas = this.canvasQuery.find();\n    const gridQuery = this.gridQuery.find();\n\n    if (!canvas || !gridQuery) {\n      return;\n    }\n\n    const newCellPositions: PositionComponent[] = [];\n\n    this.activateCellsQuery.foreach((entity: IEntity) => {\n      const position = entity.get(PositionComponent);\n      const grid = gridQuery.get(GridComponent);\n      const canvasComponent = canvas.get(CanvasComponent);\n\n      if (position && grid && canvasComponent) {\n        // to cell cordinat\n        const cellX = Math.floor(position.X / grid.CellSize);\n        const cellY = Math.floor(position.Y / grid.CellSize);\n\n        position.X = cellX;\n        position.Y = cellY;\n\n        newCellPositions.push(position);\n\n        // delete activations cell\n        this.entityManager.removeEntity(entity.id);\n      }\n    });\n\n    if (newCellPositions.length > 0) {\n      this.cellQuery.foreach((entity: IEntity) => {\n        const positionComponent = entity.get(PositionComponent);\n\n        // checing if position is in newCellPositions\n        const isDeActive = newCellPositions.some(\n          (newActiveCellPosition: PositionComponent) =>\n            newActiveCellPosition.X === positionComponent.X &&\n            newActiveCellPosition.Y === positionComponent.Y,\n        );\n\n        if (isDeActive) {\n          entity.add(new CellComponent(1));\n        }\n      });\n    }\n  }\n}\n\nexport default ResolveCellActivationSystem;\n","import { BaseSystem, Query, IEntity } from \"@yoieh/ecs-core\";\nimport { CanvasComponent } from \"../components/CanvasComponent\";\nimport { CellComponent } from \"../components/CellComponent\";\nimport { DeActivateCellComponent } from \"../components/DeActivateCellComponent\";\nimport { GridComponent } from \"../components/GridComponent\";\nimport { PositionComponent } from \"../components/PositionComponent\";\n\nexport class ResolveCellDeActivationSystem extends BaseSystem {\n  private gridQuery: Query = new Query(\n    (entity: IEntity) => entity.has(GridComponent),\n    this.entityManager,\n  );\n\n  private canvasQuery: Query = new Query(\n    (entity: IEntity) => entity.has(CanvasComponent),\n    this.entityManager,\n  );\n\n  private deactivateCellsQuery: Query = new Query(\n    (entity: IEntity) => entity.has(DeActivateCellComponent),\n    this.entityManager,\n  );\n\n  private cellQuery: Query = new Query(\n    (entity: IEntity) => entity.has(CellComponent),\n    this.entityManager,\n  );\n\n  public onUpdate(): void {\n    const canvas = this.canvasQuery.find();\n    const gridQuery = this.gridQuery.find();\n\n    if (!canvas || !gridQuery) {\n      return;\n    }\n\n    const newCellPositions: PositionComponent[] = [];\n\n    this.deactivateCellsQuery.foreach((entity: IEntity) => {\n      const position = entity.get(PositionComponent);\n      const grid = gridQuery.get(GridComponent);\n      const canvasComponent = canvas.get(CanvasComponent);\n\n      if (position && grid && canvasComponent) {\n        // to cell cordinat\n        const cellX = Math.floor(position.X / grid.CellSize);\n        const cellY = Math.floor(position.Y / grid.CellSize);\n\n        position.X = cellX;\n        position.Y = cellY;\n\n        newCellPositions.push(position);\n\n        // delete activations cell\n        this.entityManager.removeEntity(entity.id);\n      }\n    });\n\n    if (newCellPositions.length > 0) {\n      this.cellQuery.foreach((entity: IEntity) => {\n        const positionComponent = entity.get(PositionComponent);\n\n        // checing if position is in newCellPositions\n        const isActive = newCellPositions.some(\n          (newActiveCellPosition: PositionComponent) =>\n            newActiveCellPosition.X === positionComponent.X &&\n            newActiveCellPosition.Y === positionComponent.Y,\n        );\n\n        if (isActive) {\n          entity.add(new CellComponent(0));\n        }\n      });\n    }\n  }\n}\n\nexport default ResolveCellDeActivationSystem;\n","import { TimeComponent } from \"./TimeComponent\";\n\nexport class SimulationTimeComponent extends TimeComponent {\n  public speedMultiplier: number = 1;\n}\n\nexport default SimulationTimeComponent;\n","import { BaseSystem, Query, IEntity } from \"@yoieh/ecs-core\";\nimport { CellComponent } from \"../components/CellComponent\";\nimport { PositionComponent } from \"../components/PositionComponent\";\nimport { SimulationTimeComponent } from \"../components/SimulationTimeComponent\";\nimport { GridComponent } from \"../components/GridComponent\";\nimport Neighbors from \"../../utils/Neighbors\";\n\nconst neighborsCheck = new Neighbors();\n\nexport class SimpleAutomataSystem extends BaseSystem {\n  private lastUpdate: number = 0;\n\n  private activeCells: Query = new Query(\n    (entity: IEntity) =>\n      entity.has(CellComponent) && entity.has(PositionComponent),\n    // &&\n    // entity.get(CellComponent).Value === 1\n    this.entityManager,\n  );\n\n  private time = new Query((entity: IEntity) =>\n    entity.has(SimulationTimeComponent),\n  );\n\n  private gridQuery: Query = new Query((entity: IEntity) =>\n    entity.has(GridComponent),\n  );\n\n  public onUpdate(): void {\n    const timeEntity = this.time.find();\n    if (!timeEntity) {\n      return;\n    }\n\n    const time = timeEntity.get(SimulationTimeComponent).Value;\n    const { speedMultiplier } = timeEntity.get(SimulationTimeComponent);\n\n    // this aleast works for now...\n    const nextUpdate = this.lastUpdate + 100 / speedMultiplier;\n\n    if (nextUpdate < time) {\n      this.activeCells.foreach((entity: IEntity) => {\n        const { X, Y } = entity.get(PositionComponent);\n        const neighbors = neighborsCheck.getAllNeighbors(X, Y);\n\n        let activeCount = 0;\n\n        const gird = this.gridQuery.find();\n\n        neighbors.forEach(({ x, y }) => {\n          if (gird) {\n            const width = gird.get(GridComponent).Width;\n            const cell = gird.get(GridComponent).Cells[x + y * width];\n\n            if (cell && cell.get(CellComponent).Value === 1) {\n              activeCount += 1;\n            }\n          }\n        });\n\n        // Each cell with one or no neighbors dies, as if by solitude.\n        // Each cell with four or more neighbors dies, as if by overpopulation.\n        // Each cell with two or three neighbors survives.\n        if (activeCount < 2 || activeCount > 3) {\n          entity.get(CellComponent).Value = 0;\n        }\n\n        // Each cell with three neighbors becomes populated.\n        if (activeCount === 3) {\n          entity.get(CellComponent).Value = 1;\n        }\n      });\n\n      this.lastUpdate = time;\n    }\n  }\n}\n\nexport default SimpleAutomataSystem;\n","export default class Neighbors {\n  // all neighbors of a cell\n  // 1  1  1\n  // 1  X  1\n  // 1  1  1\n  all = [\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -1, y: 0 },\n    { x: 1, y: 0 },\n    { x: -1, y: 1 },\n    { x: 0, y: 1 },\n    { x: 1, y: 1 },\n  ];\n\n  // diagonals neighbors of a cell\n  // 1  0  1\n  // 0  X  0\n  // 1  0  1\n  diagonals = [\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: -1, y: 1 },\n    { x: 1, y: 1 },\n  ];\n\n  // adjacent neighbors of a cell\n  // 0  1  0\n  // 1  X  1\n  // 0  1  0\n  adjacent = [\n    { x: 0, y: -1 },\n    { x: -1, y: 0 },\n    { x: 1, y: 0 },\n    { x: 0, y: 1 },\n  ];\n\n  // allWithThis neighbors of a cell\n  // 1  1  1\n  // 1  1  1\n  // 1  1  1\n  allWithThis = [\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -1, y: 0 },\n    { x: 0, y: 0 }, // THIS CELL\n    { x: 1, y: 0 },\n    { x: -1, y: 1 },\n    { x: 0, y: 1 },\n    { x: 1, y: 1 },\n  ];\n\n  public getAllNeighbors(x: number, y: number) {\n    return this.all.map((neighbor) => ({\n      x: x + neighbor.x,\n      y: y + neighbor.y,\n    }));\n  }\n}\n","import { BaseSystem, IEntity, Query } from \"@yoieh/ecs-core\";\nimport { TimeComponent } from \"../components/TimeComponent\";\n\nexport class TimerSystem extends BaseSystem {\n  public q: Query;\n\n  public constructor() {\n    super();\n\n    this.q = new Query((entity: IEntity) => entity.has(TimeComponent));\n  }\n\n  public onUpdate(delta: number): void {\n    this.q.foreach((entity: IEntity) => {\n      const timeComponent = entity.get(TimeComponent);\n      timeComponent.Value = delta + 1;\n    });\n  }\n}\n\nexport default TimerSystem;\n","import React, { useCallback, useEffect } from \"react\";\n\nexport const useAnimationFrame = (cb: (dt: number) => void) => {\n  const requestRef = React.useRef<number>(0);\n  const previousTimeRef = React.useRef<number>(0);\n\n  const animate = useCallback(\n    (time: number) => {\n      const dt = time - previousTimeRef.current;\n      cb(dt);\n\n      requestRef.current = requestAnimationFrame(animate);\n      previousTimeRef.current = time;\n    },\n    [cb],\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [animate]);\n};\n\nexport default useAnimationFrame;\n","import React, { useCallback, useEffect } from \"react\";\n\nexport const useRecursiveTimeout = (\n  cb: (dt: number) => void,\n  delay: number,\n) => {\n  const requestRef = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const previousTimeRef = React.useRef<number>(0);\n\n  const timeout = useCallback(() => {\n    const time = Date.now();\n    const dt = time - previousTimeRef.current;\n    cb(dt);\n    requestRef.current = setTimeout(timeout, delay);\n    previousTimeRef.current = time;\n  }, [cb, delay]);\n\n  useEffect(() => {\n    requestRef.current = setTimeout(timeout, delay);\n    return () => requestRef.current && clearTimeout(requestRef.current);\n  }, [delay, timeout]);\n};\n\nexport default useRecursiveTimeout;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class PauseCommandComponent implements IComponent {}\n\nexport default PauseCommandComponent;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class PlayCommandComponent implements IComponent {}\n\nexport default PlayCommandComponent;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class SpeedCommandComponent implements IComponent {\n  constructor(public speedMultiplier: number = 1) {}\n}\n\nexport default SpeedCommandComponent;\n","import { BaseSystem, IEntity, Query } from \"@yoieh/ecs-core\";\nimport { PauseCommandComponent } from \"../components/PauseCommandComponent\";\nimport { PlayCommandComponent } from \"../components/PlayCommandComponent\";\nimport { SimulationTimeComponent } from \"../components/SimulationTimeComponent\";\nimport { SpeedCommandComponent } from \"../components/SpeedCommandComponent\";\n\nexport class SimulationTimerSystem extends BaseSystem {\n  public q = new Query((entity: IEntity) =>\n    entity.has(SimulationTimeComponent),\n  );\n\n  public pausedQ = new Query((entity: IEntity) =>\n    entity.has(PauseCommandComponent),\n  );\n\n  public playQ = new Query((entity: IEntity) =>\n    entity.has(PlayCommandComponent),\n  );\n\n  public speedMultiplierQ = new Query((entity: IEntity) =>\n    entity.has(SpeedCommandComponent),\n  );\n\n  public onCreate(): void {\n    const timeEntety = this.entityManager.createEntity();\n    timeEntety.addComponent(new SimulationTimeComponent(0));\n  }\n\n  public onUpdate(): void {\n    this.q.foreach((entity: IEntity) => {\n      const timeComponent = entity.get(SimulationTimeComponent);\n      const paused = this.pausedQ.find();\n      const play = this.playQ.find();\n\n      // alloays keeds speed multiplier updated\n      const speed = this.speedMultiplierQ.find();\n\n      if (speed) {\n        timeComponent.speedMultiplier = speed\n          ? speed.get(SpeedCommandComponent).speedMultiplier\n          : 1;\n        this.entityManager.removeEntity(speed.id);\n      }\n\n      if (paused && !play) return;\n\n      if (paused) {\n        this.pausedQ.foreach((pauseEntity: IEntity) => {\n          this.entityManager.removeEntity(pauseEntity.id);\n        });\n\n        this.playQ.foreach((playEntity: IEntity) => {\n          this.entityManager.removeEntity(playEntity.id);\n        });\n      }\n\n      timeComponent.Value = performance.now();\n    });\n  }\n}\n\nexport default SimulationTimerSystem;\n","import { IComponent } from \"@yoieh/ecs-core\";\n\nexport class ClearGridCommandComponent implements IComponent {}\n\nexport default ClearGridCommandComponent;\n","import { BaseSystem, Query, IEntity } from \"@yoieh/ecs-core\";\nimport { CellComponent } from \"../components/CellComponent\";\nimport { PositionComponent } from \"../components/PositionComponent\";\nimport { ClearGridCommandComponent } from \"../components/ClearGridCommandComponent\";\n\nexport class ClearGridSystem extends BaseSystem {\n  private lastUpdate: number = 0;\n\n  private activeCells: Query = new Query(\n    (entity: IEntity) =>\n      entity.has(CellComponent) && entity.has(PositionComponent),\n    // &&\n    // entity.get(CellComponent).Value === 1\n    this.entityManager,\n  );\n\n  private clearQ = new Query((entity: IEntity) =>\n    entity.has(ClearGridCommandComponent),\n  );\n\n  public onUpdate(): void {\n    const clear = this.clearQ.find();\n\n    if (clear) {\n      this.activeCells.foreach((entity: IEntity) => {\n        entity.get(CellComponent).Value = 0;\n      });\n\n      this.entityManager.removeEntity(clear.id);\n    }\n  }\n}\n\nexport default ClearGridSystem;\n","import { useEffect } from \"react\";\nimport { EntityManager, Engine } from \"@yoieh/ecs-core\";\nimport { GridComponent } from \"../ecs/components/GridComponent\";\nimport { TimeComponent } from \"../ecs/components/TimeComponent\";\nimport { ClearCanvasSystem } from \"../ecs/systems/ClearCanvasSystem\";\nimport { DrawCellsSystem } from \"../ecs/systems/DrawCellsSystem\";\nimport { GridSystem } from \"../ecs/systems/GridSystem\";\nimport { ResolveCellActivationSystem } from \"../ecs/systems/ResolveCellActivationSystem\";\nimport { ResolveCellDeActivationSystem } from \"../ecs/systems/ResolveCellDeActivationSystem\";\nimport { SimpleAutomataSystem } from \"../ecs/systems/SimpleAutomataSystem\";\nimport { TimerSystem } from \"../ecs/systems/TimerSystem\";\nimport { useAnimationFrame } from \"./useAnimationFrame\";\nimport { useRecursiveTimeout } from \"./useRecursiveTimeout\";\nimport { SimulationTimerSystem } from \"../ecs/systems/SimulationTimerSystem\";\nimport { ClearGridSystem } from \"../ecs/systems/ClearGridSystem\";\n\nconst init = () => {\n  const time = EntityManager.instance.createEntity();\n  time.add(new TimeComponent());\n\n  const grid = EntityManager.instance.createEntity();\n\n  grid.add(new GridComponent(window.innerWidth, window.innerHeight, 10));\n\n  // create systems after adding entities\n  Engine.instance.createSystem(TimerSystem);\n  Engine.instance.createSystem(SimulationTimerSystem);\n  Engine.instance.createSystem(ClearCanvasSystem);\n  Engine.instance.createSystem(GridSystem);\n\n  Engine.instance.createSystem(ClearGridSystem);\n\n  Engine.instance.createSystem(ResolveCellActivationSystem);\n  Engine.instance.createSystem(ResolveCellDeActivationSystem);\n\n  Engine.instance.createSystem(SimpleAutomataSystem);\n\n  Engine.instance.createSystem(DrawCellsSystem);\n};\n\nconst run = (dt: number) => {\n  Engine.instance.tick(dt);\n};\n\nconst render = () => {\n  Engine.instance.render();\n};\n\nexport const useEngine = () => {\n  useRecursiveTimeout(run, 0);\n  useAnimationFrame(render);\n\n  useEffect(() => {\n    init();\n\n    return () => {\n      //   Engine.instance.destroy();\n      Engine.instance.systems.forEach((system) => {\n        Engine.instance.unregisterSystem(system);\n      });\n\n      //   EntityManager.instance.destroy();\n      EntityManager.instance.entities.forEach((entity) => {\n        EntityManager.instance.removeEntity(entity.id);\n      });\n    };\n  }, []);\n\n  return null;\n};\n\nexport default useEngine;\n","import React from \"react\";\n\nimport \"./UI.scss\";\n\nexport const UIBottom = function () {\n  return <div className=\"ui bottom\">TEST UI</div>;\n};\n\nexport default UIBottom;\n","import React from \"react\";\n\nimport \"./UI.scss\";\nimport { EntityManager } from \"@yoieh/ecs-core\";\nimport { PauseCommandComponent } from \"../../ecs/components/PauseCommandComponent\";\nimport { PlayCommandComponent } from \"../../ecs/components/PlayCommandComponent\";\nimport { SpeedCommandComponent } from \"../../ecs/components/SpeedCommandComponent\";\nimport { ClearGridCommandComponent } from \"../../ecs/components/ClearGridCommandComponent\";\n\nconst pause = () => {\n  const entity = EntityManager.instance.createEntity();\n  entity.addComponent(new PauseCommandComponent());\n};\n\nconst play = () => {\n  const entity = EntityManager.instance.createEntity();\n  entity.addComponent(new PlayCommandComponent());\n};\n\nconst clear = () => {\n  const entity = EntityManager.instance.createEntity();\n  entity.addComponent(new ClearGridCommandComponent());\n};\n\nexport const UITop = function () {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const [speedMultiplier, setSpeedMultiplier] = React.useState(1);\n  const handelSetSpeedMultiplier = (currentValue: number, value: number) => {\n    let newValue = parseFloat((currentValue + value).toFixed(1));\n\n    if (newValue <= 0) {\n      newValue = 0.1;\n    } else if (newValue > 10) {\n      newValue = 10;\n    }\n\n    const entity = EntityManager.instance.createEntity();\n    entity.addComponent(new SpeedCommandComponent(newValue));\n\n    return newValue;\n  };\n\n  const [isPaused, setPaused] = React.useState(false);\n\n  return (\n    <div className=\"ui top\">\n      <div>left</div>\n      <div>\n        <button type=\"button\" onClick={clear}>\n          clear\n        </button>\n        {isPaused ? (\n          <button\n            type=\"button\"\n            onClick={() => {\n              play();\n              setPaused(false);\n            }}>\n            play\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={() => {\n              pause();\n              setPaused(true);\n            }}>\n            pause\n          </button>\n        )}\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSpeedMultiplier((c) => handelSetSpeedMultiplier(c, -1));\n          }}>\n          {\"<<\"}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSpeedMultiplier((c) => handelSetSpeedMultiplier(c, -0.1));\n          }}>\n          {\"<\"}\n        </button>\n        {speedMultiplier}x{\" \"}\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSpeedMultiplier((c) => handelSetSpeedMultiplier(c, 0.1));\n          }}>\n          {\">\"}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSpeedMultiplier((c) => handelSetSpeedMultiplier(c, 1));\n          }}>\n          {\">>\"}\n        </button>\n        <small>\n          <i>(updates every ~{Math.floor(100 / speedMultiplier)}ms)</i>\n        </small>\n      </div>\n      <div>right</div>\n    </div>\n  );\n};\n\nexport default UITop;\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport { Canvas } from \"./Display/Canvas\";\nimport { useEngine } from \"./hooks/useEngine\";\n\nimport { UIBottom } from \"./components/UI/UIBottom\";\nimport { UITop } from \"./components/UI/UITop\";\n\nconst App: React.FC = function () {\n  useEngine();\n\n  return (\n    <div className=\"App\">\n      <Canvas />\n\n      <UITop />\n      <UIBottom />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"normalize.css\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}